stocks$test1<-c(LETTERS[11:20])
test1<-gather(stocks, stock, price, -c(time,test,test1))
as.data.frame(test1)
test2<-gather(test1, t, , -c(time,stock,price))
as.data.frame(test2)
test1<-gather(stocks, stock, price, -c(time,test,test1))
as.data.frame(test1)
test2<-gather(test1, t, , -c(time,stock,price))
as.data.frame(test2)
stocks <- data_frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks$precip1<-c(LETTERS[1:10])
stocks$precip2<-c(LETTERS[11:20])
test1<-gather(stocks, breeding, month, -c(time,precip1,precip2))
as.data.frame(test1)
test2<-gather(test1, prec, , -c(time,breeding,month))
as.data.frame(test2)
0.74^2
?with
with(data.frame(u = c(5,10,15,20,30,40,60,80,100),
lot1 = c(118,58,42,35,27,25,21,19,18),
lot2 = c(69,35,26,21,18,16,13,12,12)),
list(summary(glm(lot1 ~ log(u), family = Gamma)),
summary(glm(lot2 ~ log(u), family = Gamma))))
u
dat<-data.frame(u = c(5,10,15,20,30,40,60,80,100),
lot1 = c(118,58,42,35,27,25,21,19,18),
lot2 = c(69,35,26,21,18,16,13,12,12)
)
dat
with(dat,
list(summary(glm(lot1 ~ log(u), family = Gamma)),
summary(glm(lot2 ~ log(u), family = Gamma))))
dat
within(dat,
list(summary(glm(lot1 ~ log(u), family = Gamma)),
summary(glm(lot2 ~ log(u), family = Gamma))))
dat
d<-c(Precip.1,Precip.2,Precip.3)
d<-c('Precip.1','Precip.2','Precip.3','Precip.12')
sort(d)
class(d)
dat
res<-glm(dat~lot1+lot2)
res<-glm(u~lot1+lot2,data=dat)
res
?offseet
?offset
?arima
library(ape)
?parafit
data(gopher.D)
data(lice.D)
data(HP.links)
res <- parafit(gopher.D, lice.D, HP.links, nperm=99, test.links=TRUE)
# res     # or else: print(res)
View(gopher.D)
View(lice.D)
View(HP.links)
View(gopher.D)
library(vegan)
?paco
?procrustes
data(varespec)
vare.dist <- vegdist(wisconsin(varespec))
mds.null <- monoMDS(vare.dist, y = cmdscale(vare.dist))
mds.alt <- monoMDS(vare.dist)
vare.proc <- procrustes(mds.alt, mds.null)
vare.proc
vare.dist
vare.proc
View(lice.D)
res
HP.links
View(gopher.D)
summary(vare.proc)
plot(vare.proc)
plot(vare.proc, kind=2)
residuals(vare.proc)
plot(vare.proc)
plot(vare.proc,kind=2)
res
?tanglegram
??tanglegram
library(dendextend)
set.seed(23235)
ss <- sample(1:150, 10 )
dend1 <- iris[ss,-5] %>% dist %>% hclust("com") %>% as.dendrogram
dend2 <- iris[ss,-5] %>% dist %>% hclust("sin") %>% as.dendrogram
dend12 <- dendlist(dend1, dend2)
dend12 %>% tanglegram
tanglegram(dend1 , dend2)
tanglegram(dend1 , dend2, sort = TRUE)
tanglegram(dend1 , dend2, remove_nodePar = TRUE)
dend1
dend2
class(dend2)
tanglegram(dend1 , dend2, k_labels = 6, k_branches = 4)
tanglegram(dend1 , dend2, lab.cex = 2, edge.lwd = 3,
margin_inner= 5, type = "t", center = TRUE)
tanglegram(dend1 , dend2, lab.cex = 2, edge.lwd = 3,
margin_inner= 3.5, type = "t", center = TRUE,
dLeaf = -0.1, xlim = c(7,0),
k_branches=3)
d1 <- c(1:5) # some data
d2 <- dist(d1)
d3 <- hclust(d2, method = "average")
dend <- as.dendrogram(d3)
d3
d1
d2
d3
d1<-1,0.5,1
d1<-c(1,0.5,1)
d2<-dist(d1)
d3<-hclust(d2,methods=)
d3<-hclust(d2,method='average')
d3
d2
dend<-as.dendrogram(d3)
dend
plot(dend)
d1 <- c(1:5) # some data
d2 <- dist(d1)
d3 <- hclust(d2, method = "average")
dend <- as.dendrogram(d3)
d11 <- c(1:6) # some data
d21 <- dist(d11)
d31 <- hclust(d21, method = "average")
dend1 <- as.dendrogram(d31)
tanglegram(dend,dend1)
tanglegram(dend,dend1[1:5])
dend1
dend2
dend12 <- dendlist(dend1, dend2)
dend12
dend12 %>% tanglegram
dend2
summary(dend2)
set.seed(23235)
ss <- sample(1:150, 10 )
dend1 <- iris[ss,-5] %>% dist %>% hclust("com") %>% as.dendrogram
dend2 <- iris[ss,-5] %>% dist %>% hclust("sin") %>% as.dendrogram
dend12 <- dendlist(dend1, dend2)
dend12
dend12 %>% tanglegram
ss
?iris
dend1
summary(dend1)
head(dend1)
?iris
head(iris)
x <- 1:5 %>% dist %>% hclust %>% as.dendrogram
y <- set(x, "labels", 5:1)
# example 2
dend1 <- 1:10 %>% dist %>% hclust %>% as.dendrogram
dend2 <- dend1 %>% set("labels", c(1,3,2,4, 5:10) )
dend_diff(dend1, dend2)
tanglegram(dend_diff, common_subtrees_color_branches = TRUE)
tanglegram(dend1,dend2, common_subtrees_color_branches = TRUE)
dend15 <- c(1:5) %>% dist %>% hclust(method = "average") %>% as.dendrogram
dend15 <- dend15 %>% set("labels_to_char")
dend51 <- dend15 %>% set("labels", as.character(5:1)) %>% match_order_by_labels(dend15)
dends_15_51 <- dendlist(dend15, dend51)
dends_15_51
x <- 1:5 %>% dist %>% hclust %>% as.dendrogram
y <- set(x, "labels", 5:1)
# example 2
dend1 <- 1:10 %>% dist %>% hclust %>% as.dendrogram
dend2 <- dend1 %>% set("labels", c(1,3,2,4, 5:10) )
dend_diff(dend1, dend2)
dend2
dend2 <- dend1 %>% set("labels", c(1,3,4,4, 5:10) )
tanglegram(dends_15_51)
tanglegram(dend1,dend2)
dend2
plot(dend2)
plot(dend1)
## Not run:
set.seed(23235)
ss <- sample(1:150, 10 )
dend1 <- iris[ss,-5] %>% dist %>% hclust("com") %>% as.dendrogram
dend2 <- iris[ss,-5] %>% dist %>% hclust("sin") %>% as.dendrogram
dend12 <- dendlist(dend1, dend2)
dend12 %>% tanglegram
tanglegram(dend1 , dend2)
tanglegram(dend1 , dend2, sort = TRUE)
tanglegram(dend1 , dend2, remove_nodePar = TRUE)
tanglegram(dend1 , dend2, k_labels = 6, k_branches = 4)
tanglegram(dend1 , dend2, lab.cex = 2, edge.lwd = 3,
margin_inner= 5, type = "t", center = TRUE)
## works nicely:
tanglegram(dend1 , dend2, lab.cex = 2, edge.lwd = 3,
margin_inner= 3.5, type = "t", center = TRUE,
dLeaf = -0.1, xlim = c(7,0),
k_branches=3)
# using rank_branches can make the comparison even easier
tanglegram(rank_branches(dend1) , rank_branches(dend2), lab.cex = 2, edge.lwd = 3,
margin_inner= 3.5, type = "t", center = TRUE,
dLeaf = -0.1, xlim = c(5.1,0), columns_width= c(5,1,5),
k_branches=3)
########
## Nice example of some colored trees
# see the coloring of common sub trees:
set.seed(23235)
ss <- sample(1:150, 10 )
dend1 <- iris[ss,-5] %>% dist %>% hclust("com") %>% as.dendrogram
dend2 <- iris[ss,-5] %>% dist %>% hclust("sin") %>% as.dendrogram
dend12 <- dendlist(dend1, dend2)
# dend12 %>% untangle %>% tanglegram
dend12 %>% tanglegram(common_subtrees_color_branches = TRUE)
set.seed(22133513)
ss <- sample(1:150, 10 )
dend1 <- iris[ss,-5] %>% dist %>% hclust("com") %>% as.dendrogram
dend2 <- iris[ss,-5] %>% dist %>% hclust("sin") %>% as.dendrogram
dend12 <- dendlist(dend1, dend2)
# dend12 %>% untangle %>% tanglegram
dend12 %>% tanglegram(common_subtrees_color_branches = TRUE)
dend12 %>% tanglegram
plot(res)
library("phytools", lib.loc="~/R/win-library/3.2")
tr1<-pbtree(n=26,tip.label=LETTERS)
tr2<-pbtree(n=26,tip.label=sample(LETTERS))
obj<-cophylo(tr1,tr2)
plot(obj)
library(phytools)
tr1<-pbtree(n=26,tip.label=LETTERS)
tr2<-pbtree(n=26,tip.label=sample(LETTERS))
obj<-cophylo(tr1,tr2)
plot(obj)
tr1
tr2
obj
?cophyloplot
cophyloplot(tr1,tr2)
tr1
str(tr1)
?phylo
library('ape')
read.tree("Host_tree.newick")
read.tree("Host_tree")
setwd("~/GitHub/protozoa_map")
read.tree("Host_tree.newick")
treeh<-read.tree("Host_tree.newick")
treeh<-read.tree("Hosts_tree.newick")
treeh
plot(treeh)
treec<-read.tree("Crypto_tree.newick")
plot(treec)
class(treeh)
all.equal(treec,treeh)
library(phytools)
assoc<-read.csv("Crypto-VertHosts.csv")
head(assoc)
class(assoc)
plot(treec)
plot(treeh)
assoc<-read.csv("Crypto-VertHosts_v1.csv")
class(assoc)
assoc
assoc<-read.csv("Crypto-VertHosts.csv")
class(assoc)
assoc
treeh<-read.tree("Hosts_tree_v1.newick")
treeh<-read.tree("Hosts_tree.newick")
treeh<-read.tree("Hosts_tree_v1.newick.txt")
treeh
plot(treeh)
treeh<-read.tree("Hosts_tree_v1.newick.txt")
plot(treeh)
class(assoc)
assoc
assoc<-read.csv("Crypto-VertHosts_v1.csv")
class(assoc)
assoc
class(assoc)
library('ape')
treeh<-read.tree("Hosts_tree.newick")
treeh<-read.tree("Hosts_tree_v1.newick.txt")
treewh
treeh
plot(treeh)
treeh<-read.tree("Hosts_tree_v1.newick.txt")
plot(treeh)
treec<-read.tree("Crypto_tree.newick")
plot(treec)
class(treeh)
all.equal(treec,treeh)
library(phytools)
assoc<-read.csv("Crypto-VertHosts.csv")
assoc<-read.csv("Crypto-VertHosts_v1.csv")
class(assoc)
assoc
class(assoc)
assoc<-read.csv("Crypto-VertHosts_v1.csv")
class(assoc)
cophylo(treec,treeh,assoc=assoc,rotate=TRUE)
library(phytools)
cophylo(treec,treeh,assoc=assoc,rotate=TRUE)
?cophyloplot
cophyloplot(treec,treeh,assoc=assoc,rotate=TRUE)
cophyloplot(treec,treeh,assoc=assoc)#,rotate=TRUE)
obj<-cophyloplot(treec,treeh,assoc=assoc)#,rotate=TRUE)
obj<-cophyloplot(treec,treeh,assoc=assoc,rotate=TRUE)
treec
treeh
?cophenetic
plot(treeh)
plot(treec)
assoc
summary(treeh)
assoc<-read.csv("Crypto-VertHosts_v1.csv")
assoc
treeh$tip.label
View(assoc)
?read.csv
assoc
names(assoc)
treeh<-read.tree("Hosts_tree_v1.newick.txt")
plot(treeh)
treec<-read.tree("Crypto_tree.newick")
plot(treec)
class(treeh)
all.equal(treec,treeh)
library(phytools)
assoc<-read.csv("Crypto-VertHosts.csv")
assoc<-read.csv("Crypto-VertHosts_v1.csv")
class(assoc)
cophyloplot(treec,treeh,assoc=assoc,rotate=TRUE)
plot(treec)
names(assoc)
rownames(assoc)
assoc[,2]
assoc[2,]
head(assoc)
?read.csv
assoc<-read.csv("Crypto-VertHosts_v1.csv",row.names = F)
assoc<-read.csv("Crypto-VertHosts_v1.csv",header = T)
head(assoc)
assoc<-read.csv("Crypto-VertHosts_v1.csv",header = T,rownames=F)
head(assoc)
assoc<-read.csv("Crypto-VertHosts_v1.csv",header = T,row.names=1)
head(assoc)
cophyloplot(treec,treeh,assoc=assoc,rotate=TRUE)
cophyloplot(treec,treeh,assoc=assoc,rotate=TRUE, length.line = 4, space = 28, gap = 3)
a <- as.character(c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40))
b <- as.character(c(14,1,4,1,9,12,2,10,6,3,13,5,14,15,18,19,19,7,14,9,10,11,25,22,21,16,23,24,26,17,1,12,12,21,15,16,21,8,20,21))
association <- cbind(a, b)
association
head(assoc)
giardia<-read.csv('giardia_time_series.csv',header=T)
giardia<-read.csv('giardia_time_series.txt',header=T)
giardia<-read.table('giardia_time_series.txt',header=T)
gairdia
giardia
giardia<-read.table('giardia_time_series.csv',header=T)
giardia
giardia<-read.table('giardia_time_series.csv',header=T)
giardia<-read.table('giardia_time_series.csv',header=T)
giardia
giardia<-read.table('giardia_time_series.csv',header=T,sep='')
giardia
giardia<-read.table('giardia_time_series.csv',header=T,sep=',')
giardia
plot(giardia$Total)
plot(giardia$Total[2:13])
plot(giardia[,2:13])
str(giardia)
matplot(giardia[,2:13])
matplot(giardia[,2:13])
matplot(giardia[,2:13])
giardia[,2:13]
matplot(giardia[1:18,2:13])
matplot(giardia[1:18,2:13],type='l')
crypto<-read.table('crypto_time_series.csv',header=T,sep=',')
matplot(crypto[1:18,2:13],type='l')
library(tidyr)
melt(giardia, id.vars=c("Month"))
library(reshape2)
# Specify id.vars: the variables to keep but not split apart on
melt(giardia, id.vars=c("Month"))
giardia
t(giardia)
giardia
g_dat<-c(giardia[1,2:13])
g_dat
giardia
g_dat<-c(giardia[1:18,2:13])
g_dat
plot(g_dat)
g_dat<-cbind(giardia[1:18,2:13])
plot(g_dat)
str(g_dat)
g_dat<-c(giardia[1:18,2:13])
str(g_dat)
g_dat<-c(giardia[1,2:13],giardia[2,2:13])
g_dat
g_datplot())
plot(g_dat)
giardia
g.ts <- ts(as.vector(as.matrix(giardia)), start=c(1997,2), end=c(2014,13), frequency=12)
g.ts
g.ts <- ts(as.vector(as.matrix(giardia)), start=c(1997,1), end=c(2014,12), frequency=12)
g.ts
g.ts <- ts(as.vector(as.matrix(giardia)), start=c(1997,14), end=c(2014,12), frequency=12)
g.ts
g.ts <- ts(as.vector(as.matrix(giardia)), start=c(1997,14), end=c(2014,12), frequency=1)
g.ts
g.ts <- ts(as.vector(as.matrix(giardia)))
g.ts
giardia
g.ts <- ts(as.vector(as.matrix(giardia[1:18,2:13])))
g.ts
plot(g.ts)
g.ts <- ts(as.vector(t(as.matrix(giardia[1:18,2:13]))))
g.ts
plot(g.ts)
c.ts <- ts(as.vector(t(as.matrix(crypto[1:18,2:13]))))
plot(c.ts)
abline(v=rep(1:length(c.ts)))
c.ts <- ts(as.vector(t(as.matrix(crypto[1:18,2:13]))))
plot(c.ts)
abline(v=rep(1:length(c.ts),by=12))
abline(v=seq(from=1,to=length(c.ts),by=12))
plot(c.ts)
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
plot(c.ts,xaxt='n')
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),lables=1997:2014)
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
plot(c.ts,xaxt='n')
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
plot(c.ts,xaxt='n',ylab="cases")
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
plot(c.ts,xaxt='n',ylab="cases",xlab="year")
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
par(mfrow=c(2,1))
plot(c.ts,xaxt='n',ylab="cases",xlab="year")
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
plot(g.ts,xaxt='n',ylab="cases",xlab="year")
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(g.ts),by=12),labels=1997:2014)
plot(g.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts)))
abline(v=seq(from=1,to=length(g.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(g.ts),by=12),labels=1997:2014)
plot(g.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(g.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(g.ts),by=12),labels=1997:2014)
plot(c.ts,xaxt='n',ylab="cases",xlab="year"ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
plot(c.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
plot(g.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(g.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(g.ts),by=12),labels=1997:2014)
?pdf
pdf("time_series.pdf",width=10,height=10)
par(mfrow=c(2,1))
plot(c.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
plot(g.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(g.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(g.ts),by=12),labels=1997:2014)
dev.off()
plot(c.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
legend(topleft,"Cryptosporidium")
legend('topleft',"Cryptosporidium")
plot(c.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
legend('topleft',"Cryptosporidium",bty='n')
pdf("time_series.pdf",width=10,height=10)
par(mfrow=c(2,1))
plot(c.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
legend('topleft',"Cryptosporidiosis",bty='n')
plot(g.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(g.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(g.ts),by=12),labels=1997:2014)
legend('topleft',"Giardiasis ",bty='n')
dev.off()
g.ts <- ts(as.vector(t(as.matrix(giardia[1:18,2:13]))))
c.ts <- ts(as.vector(t(as.matrix(crypto[1:18,2:13]))))
pdf("time_series.pdf",width=10,height=10)
par(mfrow=c(2,1))
plot(c.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(c.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(c.ts),by=12),labels=1997:2014)
legend('topright',"Cryptosporidiosis",bty='n')
plot(g.ts,xaxt='n',ylab="cases",xlab="year",ylim=c(0,max(g.ts,c.ts)))
abline(v=seq(from=1,to=length(g.ts),by=12),lty=2,col='grey')
axis(side=1,at=seq(from=1,to=length(g.ts),by=12),labels=1997:2014)
legend('topright',"Giardiasis ",bty='n')
dev.off()
2014-1997
library(ape)
?"ape-package"
?parafit
