res.pr[j,2]<-rownames(assoc)[k]}
}}}
}
res.pr
res.pr<-matrix(NA,nrow=200,ncol=2)
for (j in 1:nrow(res.pr)){
{for (i in 1:nrow(assoc)){
for (k in 1:ncol(assoc)){
if (assoc[i,k]==1){
res.pr[j,1]<-colnames(assoc)[k]
res.pr[j,2]<-rownames(assoc)[i]}
}}}
}
res.pr
as.data.frame(as.table(assoc))
class(assoc)
as.table(assoc)
table(assoc)
res.pr<-matrix(NA,nrow=200,ncol=2)
for (j in 1:nrow(res.pr)){
{for (i in 1:nrow(assoc)){
for (k in 1:ncol(assoc)){
if (assoc[i,k]==1){
res.pr[j,1]<-colnames(assoc)[k]
res.pr[j,2]<-rownames(assoc)[i]}
}}}
}
res.pr
head(assoc)
res.pr<-matrix(NA,nrow=200,ncol=2)
for (j in 1:nrow(res.pr)){
{for (i in 1:nrow(assoc)){
for (k in 1:ncol(assoc)){
if (assoc[i,]==1 & assoc[,k]==1){
res.pr[j,1]<-colnames(assoc)[k]
res.pr[j,2]<-rownames(assoc)[i]}
}}}
}
for (j in 1:nrow(res.pr)){
{for (i in 1:nrow(assoc)){
for (k in 1:ncol(assoc)){
if (assoc[i,]==1 && assoc[,k]==1){
res.pr[j,1]<-colnames(assoc)[k]
res.pr[j,2]<-rownames(assoc)[i]}
}}}
}
res.pr
for (j in 1:nrow(res.pr)){
{for (i in 1:nrow(assoc)){
for (k in 1:ncol(assoc)){
if (assoc[i,]==1 #&& assoc[,k]==1
){
res.pr[j,1]<-colnames(assoc)[k]
res.pr[j,2]<-rownames(assoc)[i]}
}}}
}
res.pr
res.pr<-matrix(NA,nrow=200,ncol=2)
assoc[1,]==1
if(assoc[1,]==1){rowname(assoc)}
if(assoc[1,]==1){rownames(assoc)}
if(assoc[1,]==1){rownames(assoc)[which(assoc[1,]==1)]}
if(assoc[1,]==1){rownames(assoc)[which(assoc[1,]==TRUE)]}
?which
which(assoc==1)
assoc[1]
assoc[[1]]
which(assoc==1)
legnth(which(assoc==1))
length(which(assoc==1))
which(assoc==1,arr.in=TRUE)
head(assoc)
which(assoc==1,arr.in=TRUE)
head(which(assoc==1,arr.in=TRUE))
?which
head(which(assoc==1,arr.ind=TRUE))
(which(assoc==1,arr.ind=TRUE))
(which(assoc==1,arr.ind=TRUE))
res.pr<-(which(assoc==1,arr.ind=TRUE))
res.pr
col.names(assoc)
colnames(assoc)
col.n<-colnames(assoc)
col.n
assoc(res.pr)
assoc[res.pr]
class(col.n)
?merge
as.data.frame(col.n)
col.n<-as.data.frame(colnames(assoc))
col.n
assoc
res.pr
cbind(col = rownames(col.n), col.n)
col.nd<-cbind(col = rownames(col.n), col.n)
col.nd
?merge
col.nd
res.pr
m1 <- merge(col.nd, res.pr, by.x = "col", by.y = "col"))
m1 <- merge(col.nd, res.pr, by.x = "col", by.y = "col")
m1
res.pr<-(which(assoc==1,arr.ind=TRUE))
col.n<-as.data.frame(colnames(assoc))
col.n
col.nd<-cbind(col = rownames(col.n), col.n)
col.nd
colnames(col.nd)<-c("col","host")
col.nd
m1 <- merge(col.nd, res.pr, by.x = "col", by.y = "host")
m1 <- merge(col.nd, res.pr, by.x = "col", by.y = "col")
m1
res.pr.d<-cbind(par = rownames(res.pr), res.pr)
res.pr.d
res.pr
str(res.pr.d)
str(res.pr)
col.n<-as.data.frame(colnames(assoc))
col.nd<-cbind(col = rownames(col.n), col.n)
colnames(col.nd)<-c("col","host")
m1 <- merge(col.nd, res.pr, by.x = "col", by.y = "col")
m1
m1 <- merge(col.nd, res.pr.d, by.x = "col", by.y = "col")
m1
mHD<-c(m1$host,m1$par)
mHD
m1
m1$host
m1$par
str(m1)
?merge
mHD<-c(as.character(m1$host),as.character(m1$par))
mHD
mHD<-cbind(as.character(m1$host),as.character(m1$par))
mHD
cophyloplot(treec,treeh,assoc=mHD,rotate=TRUE, length.line = 4, space = 28, gap = 3)
?cophyloplot
#two random trees
tree1 <- rtree(40)
tree2 <- rtree(20)
#creation of the association matrix:
association <- cbind(tree2$tip.label, tree2$tip.label)
class(association)
str(association)
str(mHD)
tail(mHD)
mHD
cophyloplot(treec,treeh,assoc=mHD,rotate=TRUE, length.line = 4, space = 28, gap = 3)
cophyloplot(treec,treeh,assoc=mHD,#rotate=TRUE,
length.line = 4, space = 28, gap = 3)
?cophyloplot
association
install.packages("paco")
library(paco)
D <- prepare_paco_data(disth, distc, assoc)
disth
D <- prepare_paco_data(disth, distc, assoc)
D
paco(D)
PACo(D)
translate(assoc)
t(assoc)
D <- prepare_paco_data(disth, distc, t(assoc))
disth
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D)
prepare_paco_data
rownames(disth)
rownames(t(assoc))
sort(rownames(disth))
sort(rownames(t(assoc)))
?PACo
data(gopherlice)
require(ape)
gdist <- cophenetic(gophertree)
ldist <- cophenetic(licetree)
glist
D <- prepare_paco_data(gdist, ldist, gl_links)
gdist <- cophenetic(gophertree)
ldist <- cophenetic(licetree)
D <- prepare_paco_data(gdist, ldist, gl_links)
D
sort(t(assoc))
sort(disth)
disth
ordered.df <- disth[order(disth$row.names),]
disth[ rownames(disth) , ]
assoc[ rownames(assoc) , ]
assoc[ rownames(t(assoc)) , ]
assoc[ colnames(t(assoc)) , ]
assoc[ colnames(assoc) , ]
assoc[  ,colnames(assoc) ]
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D)
names(disth)
rownames(disth)
rownames(assoc)
rownames(t(assoc))
sort(rownames(disth))
sort(rownames(t(assoc)))
library('ape')
treeh<-read.tree("Hosts_tree.newick")
treeh<-read.tree("Hosts_tree_v1.newick.txt")
plot(treeh)
treec<-read.tree("Crypto_tree.newick")
plot(treec)
class(treeh)
all.equal(treec,treeh)
library(phytools)
assoc<-read.csv("Crypto-VertHosts.csv")
assoc<-read.csv("Crypto-VertHosts_v1.csv",header = T,row.names=1)
class(assoc)
assoc
disth<-cophenetic.phylo(treeh)
distc<-cophenetic.phylo(treec)
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='lingoes')
res
res.pr<-(which(assoc==1,arr.ind=TRUE))
res.pr.d<-cbind(par = rownames(res.pr), res.pr)
col.n<-as.data.frame(colnames(assoc))
col.nd<-cbind(col = rownames(col.n), col.n)
colnames(col.nd)<-c("col","host")
m1 <- merge(col.nd, res.pr.d, by.x = "col", by.y = "col")
mHD<-cbind(as.character(m1$host),as.character(m1$par))
mHD
library(paco)
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D)
?PACo
PACo(D,correction='lingoes')
?PACo
PACo(D,, nperm=10, seed=42, method="r0", correction='cailliez')
D
PACo(D, nperm=10, seed=42, method="r0", correction='cailliez')
obj<-cophylo(treeh,treec)
?cophylo
obj<-cophylo(treeh,treec,assoc=assoc)
View(assoc)
names(assoc)
rownames(assoc)
obj<-cophylo(treeh,treec,assoc=assoc)
tr1<-pbtree(n=26,tip.label=LETTERS)
tr2<-pbtree(n=26,tip.label=sample(LETTERS))
obj<-cophylo(tr1,tr2)
plot(obj)
assoc
obj<-cophylo(treeh,treec,assoc=mHD)
plot(obj)
getwd()
obj<-cophylo(treeh,treec,assoc=mHD)
pdf("cophylo.pdf",height=6,width=8)
plot(obj)
dev.off()
plot(obj,length.line = 4, space = 28, gap = 3)
plot(obj,length.line = 4, space = 28, gap = 3)
dev.off()
plot(obj,length.line = 4, space = 28, gap = 3)
plot(obj)
plot(obj,tip.label=NULL)
treeh<-read.tree("Hosts_tree.newick")
treeh<-read.tree("Hosts_tree_v1.newick.txt")
plot(treeh)
treec<-read.tree("Crypto_tree.newick")
plot(treec)
class(treeh)
all.equal(treec,treeh)
library(phytools)
assoc<-read.csv("Crypto-VertHosts.csv")
assoc<-read.csv("Crypto-VertHosts_v1.csv",header = T,row.names=1)
class(assoc)
?parafit
disth<-cophenetic.phylo(treeh)
distc<-cophenetic.phylo(treec)
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='lingoes')
res
data(gopher.D)
data(lice.D)
data(HP.links)
res <- parafit(gopher.D, lice.D, HP.links, nperm=99, test.links=TRUE)
# res     # or else: print(res)
res
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='lingoes')
res
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='cailliez')
res
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='lingoes')
res
res.pr<-(which(assoc==1,arr.ind=TRUE))
res.pr.d<-cbind(par = rownames(res.pr), res.pr)
col.n<-as.data.frame(colnames(assoc))
col.nd<-cbind(col = rownames(col.n), col.n)
colnames(col.nd)<-c("col","host")
#assoc[res.pr]
m1 <- merge(col.nd, res.pr.d, by.x = "col", by.y = "col")
mHD<-cbind(as.character(m1$host),as.character(m1$par))
#
# cophyloplot(treec,treeh,assoc=mHD,#rotate=TRUE,
#             length.line = 4, space = 28, gap = 3)
library(paco)
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D, nperm=10, seed=42, method="r0", correction='cailliez')
# sort(rownames(disth))
# sort(rownames(t(assoc)))
D
obj<-cophylo(treeh,treec,assoc=mHD)
plot(obj)
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D, nperm=10, seed=42, method="r0", correction='cailliez')
PACo(D, nperm=10, seed=42, correction='cailliez')
PACo(D)#, nperm=10, seed=42, method="r0", correction='cailliez')
PACo
PACo(D, nperm=10, seed=42, method="r1", correction='cailliez')
PACo(D, nperm=10, seed=42, method="swap", correction='cailliez')
PACo(D, nperm=10, seed=42, method="quasiswap", correction='cailliez')
PACo(D, nperm=10, seed=42, method="backtrack", correction='cailliez')
PACo(D, nperm=10, seed=42, method="backtrack", correction='cailliez',optional=T)
cophenetic.phylo
?cophenetic.phylo
disth<-cophenetic.phylo(treeh)
dist.nodes(treeh)
max(dist.nodes(treeh))
data(gopherlice)
require(ape)
gdist <- cophenetic(gophertree)
ldist <- cophenetic(licetree)
D <- prepare_paco_data(gdist, ldist, gl_links)
D <- add_pcoord(D)
D <- PACo(D, nperm=10, seed=42, method="r0", correction='cailliez')
print(D$gof)
D
max(gdist)
cophenetic.phylo
?dist
disth<-dist.nodes(treeh)
disth
max(disth)
disth<-cophenetic.phylo(treeh)
max(disth)
disth<-dist.nodes(treeh)
class(disth)
disth<-cophenetic.phylo(treeh)
class(disth)
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D)#, nperm=10, seed=42, method="r0", correction='cailliez')
?PACo
PACo(D, nperm=10, seed=42, method="r0", correction='cailliez')
plot(obj)
obj
PACo(D, nperm=100, seed=42, method="r0", correction='cailliez')
pcoa(D)
pcoa(disth)
plot(pcoa(disth))
plot(pcoa(disth)[1])
plot(pcoa(disth)$Axis.1)
tt<-pcoa(disth)
names(tt)
plot(tt)
plot(tt$values)
tt
plot(obj,edge.col="red")
plot(obj,edge.color="red")
dev.off()
plot(obj,edge.color="red")
plot(obj,tip.color="red")
plot.phylo(obj,tip.color="red")
PACo(D, nperm=100, seed=42, method="r0")#, correction='cailliez')
PACo(D, nperm=100, seed=42, method="r0", correction='cailliez')
PACo(D, nperm=100, seed=42, method="r0", correction='cailliez',eigenvals=F)
PACo(D, nperm=100, seed=42, method="r0", correction='cailliez',optional=T)
D <- prepare_paco_data(disth, distc, t(assoc))
D
disth<-disth/max(disth)
max(disth)
distc<-distc/max(distc)
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D, nperm=100, seed=42, method="r0", correction='cailliez')
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D, nperm=100, seed=42, method="r0", correction='cailliez')
PACo(D, method="r0", correction='cailliez')
library('ape')
treeh<-read.tree("Hosts_tree.newick")
treeh<-read.tree("Hosts_tree_v1.newick.txt")
plot(treeh)
treec<-read.tree("Crypto_tree.newick")
plot(treec)
class(treeh)
#all.equal(treec,treeh)
library(phytools)
assoc<-read.csv("Crypto-VertHosts.csv")
assoc<-read.csv("Crypto-VertHosts_v1.csv",header = T,row.names=1)
class(assoc)
# need to change the assoc for cophyloplot
#cophyloplot(treec,treeh,assoc=assoc,rotate=TRUE, length.line = 4, space = 28, gap = 3)
#?parafit
disth<-cophenetic.phylo(treeh)
disth<-dist.nodes(treeh)
distc<-cophenetic.phylo(treec)
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='lingoes')
# library(aylmer)
# as.pairwise(assoc) # doesn't work - not square matrix
# dave_prwise<-function (x)
# {
#   #stopifnot(nrow(x) == ncol(x))
#   n <- nrow(x)
#   k <- n * (n - 1)/2
#   out <- matrix(NA, k, n)
#   upper.indexes <- which(lower.tri(x), arr.ind = TRUE)
#   from.mat <- rbind(upper.indexes, upper.indexes[, 2:1])
#   to.mat <- cbind(rep(1:nrow(upper.indexes), 2), as.vector(upper.indexes[,
#                                                                          2:1]))
#   out[to.mat] <- x[from.mat]
#   colnames(out) <- colnames(x)
#   return(out)
# }
#
# dave_prwise(assoc) # doesn't work - not square matrix
#
# # res.pr<-matrix(NA,nrow=200,ncol=2)
# #
# # for (j in 1:nrow(res.pr)){
# #   {for (i in 1:nrow(assoc)){
# #   for (k in 1:ncol(assoc)){
# #   if (assoc[i,]==1 #&& assoc[,k]==1
# #       ){
# #     res.pr[j,1]<-colnames(assoc)[k]
# #     res.pr[j,2]<-rownames(assoc)[i]}
# # }}}
# #  }
# #
res.pr<-(which(assoc==1,arr.ind=TRUE))
res.pr.d<-cbind(par = rownames(res.pr), res.pr)
col.n<-as.data.frame(colnames(assoc))
col.nd<-cbind(col = rownames(col.n), col.n)
colnames(col.nd)<-c("col","host")
#assoc[res.pr]
m1 <- merge(col.nd, res.pr.d, by.x = "col", by.y = "col")
mHD<-cbind(as.character(m1$host),as.character(m1$par))
#
# cophyloplot(treec,treeh,assoc=mHD,#rotate=TRUE,
#             length.line = 4, space = 28, gap = 3)
library(paco)
## check scaling
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D, nperm=100, seed=42, method="r0", correction='cailliez')
# sort(rownames(disth))
# sort(rownames(t(assoc)))
# sort(disth)
# assoc[  ,colnames(assoc) ]
##
# data(gopherlice)
# require(ape)
# gdist <- cophenetic(gophertree)
# ldist <- cophenetic(licetree)
# D <- prepare_paco_data(gdist, ldist, gl_links)
# D <- add_pcoord(D)
# D <- PACo(D, nperm=10, seed=42, method="r0", correction='cailliez')
obj<-cophylo(treeh,treec,assoc=mHD)
pdf("cophylo.pdf",height=6,width=8)
plot(obj,edge.color="red")
dev.off()
res
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='cailliez')
disth<-cophenetic.phylo(treeh)
disth<-dist.nodes(treeh)
distc<-cophenetic.phylo(treec)
disth<-cophenetic.phylo(treeh)
#disth<-dist.nodes(treeh)
distc<-cophenetic.phylo(treec)
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='lingoes')
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='cailliez')
res
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='lingoes')
res
treec<-read.tree("Crypto_tree_v1.newick.txt")
treeh<-read.tree("Hosts_tree_v1.newick.txt")
plot(treeh)
treec<-read.tree("Crypto_tree.newick")
treec<-read.tree("Crypto_tree_v1.newick.txt")
plot(treec)
class(treeh)
#all.equal(treec,treeh)
library(phytools)
assoc<-read.csv("Crypto-VertHosts.csv")
assoc<-read.csv("Crypto-VertHosts_v1.csv",header = T,row.names=1)
class(assoc)
#cophyloplot(treec,treeh,assoc=assoc,rotate=TRUE, length.line = 4, space = 28, gap = 3)
#?parafit
disth<-cophenetic.phylo(treeh)
#disth<-dist.nodes(treeh)
distc<-cophenetic.phylo(treec)
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='lingoes')
res
res<-parafit(host.D=disth, para.D=distc, HP=assoc,correction='cailliez')
res.pr<-(which(assoc==1,arr.ind=TRUE))
res.pr.d<-cbind(par = rownames(res.pr), res.pr)
col.n<-as.data.frame(colnames(assoc))
col.nd<-cbind(col = rownames(col.n), col.n)
colnames(col.nd)<-c("col","host")
#assoc[res.pr]
m1 <- merge(col.nd, res.pr.d, by.x = "col", by.y = "col")
mHD<-cbind(as.character(m1$host),as.character(m1$par))
library(paco)
## check scaling
D <- prepare_paco_data(disth, distc, t(assoc))
PACo(D, nperm=100, seed=42, method="r0", correction='cailliez')
pdf("cophylo.pdf",height=6,width=8)
obj<-cophylo(treeh,treec,assoc=mHD)
plot(obj,edge.color="red")
dev.off()
cophenetic
cophenetic(treeh)
plot(treeh)
